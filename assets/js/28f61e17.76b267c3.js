"use strict";(self.webpackChunkmpeg_coder=self.webpackChunkmpeg_coder||[]).push([[3561],{5549:function(e,t,a){a.d(t,{A:function(){return l},q:function(){return o}});var n=a(7294),r=a(9960),i="https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/blob/e5d48b9c65152a303eddccbe65dad8059d0556ae/MpegCoder",d="https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/blob/1553da11d08463ca7b007bcdd68685503da45a5f/MpegCoder";function l(e){var t;if(void 0!==e.ver)switch(e.ver){case"3.2.0":default:t=d+"/"+e.url;break;case"3.1.0":t=i+"/"+e.url}else t=d+"/"+e.url;return n.createElement(r.Z,{to:t,className:"noline"},e.children)}function o(e){return n.createElement("span",{style:{padding:"0 "+e.padx}},"\xb7")}o.defaultProps={padx:"1ex"}},7324:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return k},default:function(){return v},frontMatter:function(){return h},metadata:function(){return N},toc:function(){return g}});var n=a(3117),r=a(102),i=(a(7294),a(3905)),d=a(541),l=a(5514),o=a(6577),p=a(2895),m=a(7508),c=a(5549),s=["components"],h={id:"MpegEncoder",title:"MpegEncoder",sidebar_label:"MpegEncoder",slug:"/apis/MpegEncoder",description:"This class has wrapped the C-API of FFMpeg encoder so that users could call its methods to encode frames by using numpy-data quickly."},k=void 0,N={unversionedId:"apis/MpegEncoder",id:"version-3.1.0/apis/MpegEncoder",title:"MpegEncoder",description:"This class has wrapped the C-API of FFMpeg encoder so that users could call its methods to encode frames by using numpy-data quickly.",source:"@site/versioned_docs/version-3.1.0/apis/MpegEncoder.mdx",sourceDirName:"apis",slug:"/apis/MpegEncoder",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/3.1.0/apis/MpegEncoder",draft:!1,editUrl:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/edit/docs/versioned_docs/version-3.1.0/apis/MpegEncoder.mdx",tags:[],version:"3.1.0",frontMatter:{id:"MpegEncoder",title:"MpegEncoder",sidebar_label:"MpegEncoder",slug:"/apis/MpegEncoder",description:"This class has wrapped the C-API of FFMpeg encoder so that users could call its methods to encode frames by using numpy-data quickly."},sidebar:"version-3.1.0/apis",previous:{title:"MpegDecoder",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/3.1.0/apis/MpegDecoder"},next:{title:"MpegClient",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/3.1.0/apis/MpegClient"}},u={},g=[{value:"Arguments",id:"arguments",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>clear</code>",id:"clear",level:3},{value:"<code>resetPath</code>",id:"resetpath",level:3},{value:"Requires",id:"requires",level:4},{value:"<code>getParameter</code>",id:"getparameter",level:3},{value:"Requires",id:"requires",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>setParameter</code>",id:"setparameter",level:3},{value:"Requires",id:"requires",level:4},{value:"<code>FFmpegSetup</code>",id:"ffmpegsetup",level:3},{value:"Requires",id:"requires",level:4},{value:"<code>dumpFile</code>",id:"dumpfile",level:3},{value:"<code>EncodeFrame</code>",id:"encodeframe",level:3},{value:"Requires",id:"requires",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>FFmpegClose</code>",id:"ffmpegclose",level:3},{value:"Operators",id:"operators",level:2},{value:"<code>__str__</code>",id:"__str__",level:3},{value:"Returns",id:"returns",level:4},{value:"Examples",id:"examples",level:2},{value:"Optimize the video encoding",id:"optimize-the-video-encoding",level:3},{value:"Rescale and resample the video",id:"rescale-and-resample-the-video",level:3},{value:"Use the AV1 encoder",id:"use-the-av1-encoder",level:3},{value:"Use multi-thread encoding",id:"use-multi-thread-encoding",level:3}],f={toc:g};function v(e){var t=e.components,a=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)(l.Z,{icon:o.Z,mdxType:"InlineIcon"})," Class",(0,i.kt)(c.q,{mdxType:"Splitter"}),(0,i.kt)(c.A,{ver:"3.1.0",url:"MpegCoder.h#L82",mdxType:"SourceURL"},(0,i.kt)(l.Z,{icon:m.Z,mdxType:"InlineIcon"})," Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"enc = mpegCoder.MpegEncoder()\n")),(0,i.kt)("p",null,"The frame-level video encoder used for muxing a video file."),(0,i.kt)("p",null,"This encoder instance serves as a video file writer. It supports:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Encode a 3D ",(0,i.kt)("a",{parentName:"li",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,i.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," as a video frame."),(0,i.kt)("li",{parentName:"ul"},"Configure the codec type and the video parameters."),(0,i.kt)("li",{parentName:"ul"},"Scaling the encoded video frames to a specific size.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MpegEncoder")," requires users to initialize the encoder before writing frames, and close the video after finishing all works. If the video is not closed manually, an automatical closing would be performed when the encoder is destructed. During the distruction, hitting ",(0,i.kt)("kbd",null,"Ctrl"),"+",(0,i.kt)("kbd",null,"C")," will cause the written video to break."),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("p",null,"This class does not has initialization arguments."),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"clear"},(0,i.kt)("inlineCode",{parentName:"h3"},"clear")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"enc.clear()\n")),(0,i.kt)("p",null,"Clear all configurations ",(0,i.kt)("strong",{parentName:"p"},"including")," the default video path. If a video is opened by the encoder, ",(0,i.kt)("inlineCode",{parentName:"p"},"clear()")," will close the video automatically."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"We suggest that users should call ",(0,i.kt)("inlineCode",{parentName:"p"},"clear()")," manually, like using other file writers."))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resetpath"},(0,i.kt)("inlineCode",{parentName:"h3"},"resetPath")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"enc.resetPath(videoPath)\n")),(0,i.kt)("p",null,"Reset the default video path to a specific value. Configuring this value will not cause the video to be opened. This method is merely used as a configuration."),(0,i.kt)("h4",{id:"requires"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(l.Z,{icon:p.Z,mdxType:"InlineIcon"})),(0,i.kt)("td",{parentName:"tr",align:"left"},"The path of the video to be written.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getparameter"},(0,i.kt)("inlineCode",{parentName:"h3"},"getParameter")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"param = enc.getParameter(paramName=None)\n")),(0,i.kt)("p",null,"Get the video parameter or configuration value. Each time ",(0,i.kt)("inlineCode",{parentName:"p"},"paramName")," only accepts one parameter name."),(0,i.kt)("h4",{id:"requires"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"paramName")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the parameter to be checked. If not give, all important parameters, including some private parameters will be returned as a ",(0,i.kt)("inlineCode",{parentName:"td"},"dict"),".")))),(0,i.kt)("p",null,"Here is a list of checkable ",(0,i.kt)("inlineCode",{parentName:"p"},"paramName"),":"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The current path of the written video. If the video is not opened, will return the default video path.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"codecName")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the encoder. See ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/ffmpeg-codecs.html#toc-Video-Encoders",title:"Video encoders of FFMpeg"},"here",(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," to view a list of FFMpeg encoders. Note that not all encoders could be used, the avaliable encoders depends on the current FFMpeg built libraries.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nthread")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of encoder threads.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"bitRate")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The bit rate of the written video (Kb/s). This value determines the output video size directly.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"width")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The width of the written video. This value is mainly determined by the user configurations.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"height")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The height of the written video. This value is mainly determined by the user configurations.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"widthSrc")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The width of the source frame. This value should be consistent with the size of the ",(0,i.kt)("a",{parentName:"td",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,i.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),". If not given, will use ",(0,i.kt)("inlineCode",{parentName:"td"},"width"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"heightSrc")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The height of the source frame. This value should be consistent with the size of the ",(0,i.kt)("a",{parentName:"td",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,i.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),". If not given, will use ",(0,i.kt)("inlineCode",{parentName:"td"},"height"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"GOPSize")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The size of one ",(0,i.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Group_of_pictures",title:"Group of pictures | Wikipedia"},"GOP",(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"maxBframe")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The maximal number of consecutive B frames in a GOP. In most cases, this value could not be greater than ",(0,i.kt)("inlineCode",{parentName:"td"},"16"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"frameRate")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The target frame rate of the written video. The unit is FPS.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"param")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Determined by ",(0,i.kt)("inlineCode",{parentName:"td"},"paramName")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The returned value of the parameter. If no ",(0,i.kt)("inlineCode",{parentName:"td"},"paramName")," is given, will return all important parameters.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setparameter"},(0,i.kt)("inlineCode",{parentName:"h3"},"setParameter")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"enc.setParameter(\n    decoder=None, configDict=None, videoPath=None, codecName=None,\n    nthread=None, bitRate=None, width=None, height=None, widthSrc=None, heightSrc=None,\n    GOPSize=None, maxBframe=None, frameRate=None\n)\n")),(0,i.kt)("p",null,"Set the configurations of the encoder. To make the configurations take effects, these parameters need to be configured before ",(0,i.kt)("a",{parentName:"p",href:"#ffmpegsetup"},(0,i.kt)("inlineCode",{parentName:"a"},"FFmpegSetup()")),"."),(0,i.kt)("h4",{id:"requires"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"decoder")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("a",{parentName:"td",href:"./MpegDecoder"},(0,i.kt)("inlineCode",{parentName:"a"},"MpegDecoder"))," or ",(0,i.kt)("a",{parentName:"td",href:"./MpegClient"},(0,i.kt)("inlineCode",{parentName:"a"},"MpegClient"))),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"When configure this argument, the required configurations will be copied from a decoder or a client. If users also provide duplicated arguments in the same call, these copied parameters have a lower preference than those specified by users. This argument is useful when trancoding a video.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"configDict")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"dict")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"An alternative of the argument ",(0,i.kt)("inlineCode",{parentName:"td"},"decoder")," when the parameters need to be passed through different processes. Using ",(0,i.kt)("inlineCode",{parentName:"td"},"configDict=decoder.getParameter()")," is equivalent to using ",(0,i.kt)("inlineCode",{parentName:"td"},"decoder=decoder"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The current path of the written video. If the video is not opened, will return the default video path.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"codecName")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the encoder. See ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/ffmpeg-codecs.html#toc-Video-Encoders",title:"Video encoders of FFMpeg"},"here",(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," to view a list of FFMpeg encoders. Note that not all encoders could be used, the avaliable encoders depends on the current FFMpeg built libraries.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nthread")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of encoder threads.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"bitRate")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The bit rate of the written video (Kb/s). This value determines the output video size directly.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"width")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The width of the written video.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"height")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The height of the written video.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"widthSrc")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The width of the source frame. This value should be consistent with the size of the ",(0,i.kt)("a",{parentName:"td",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,i.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),". If not given, will use ",(0,i.kt)("inlineCode",{parentName:"td"},"width"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"heightSrc")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The height of the source frame. This value should be consistent with the size of the ",(0,i.kt)("a",{parentName:"td",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,i.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),". If not given, will use ",(0,i.kt)("inlineCode",{parentName:"td"},"height"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"GOPSize")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The size of one ",(0,i.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Group_of_pictures",title:"Group of pictures | Wikipedia"},"GOP",(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"maxBframe")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The maximal number of consecutive B frames in a GOP. In most cases, this value could not be greater than ",(0,i.kt)("inlineCode",{parentName:"td"},"16"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"frameRate")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"tuple")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The target frame rate of the written video. This value should be a tuple of two ",(0,i.kt)("inlineCode",{parentName:"td"},"int"),"s: ",(0,i.kt)("inlineCode",{parentName:"td"},"(numerator, denominator)"),". This format is consistent with ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/doxygen/trunk/structAVRational.html",title:"AVRational"},(0,i.kt)("inlineCode",{parentName:"a"},"AVRational"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),".")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ffmpegsetup"},(0,i.kt)("inlineCode",{parentName:"h3"},"FFmpegSetup")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"enc.FFmpegSetup(videoPath=None)\n")),(0,i.kt)("p",null,"Open the video file, and initialize the encoder. During the encoder initialization, the codec and the video format will be configured according to the file name and the user configurations set by ",(0,i.kt)("a",{parentName:"p",href:"#setparameter"},(0,i.kt)("inlineCode",{parentName:"a"},"setParameter()")),". If an video is being opened by the encoder now, this video will be closed first, then the new video will be opened with the same configurations."),(0,i.kt)("h4",{id:"requires"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The path of the video to be written. If not given, will use the default path configured by ",(0,i.kt)("a",{parentName:"td",href:"#resetpath"},(0,i.kt)("inlineCode",{parentName:"a"},"resetPath()")),". Setting this argument will also cause the default video path to change.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dumpfile"},(0,i.kt)("inlineCode",{parentName:"h3"},"dumpFile")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"enc.dumpFile()\n")),(0,i.kt)("p",null,"Print out a brief preview of the video meta-data to the standard output."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This method is based on C stdout. Therefore, these results could not be redirected or catched by python."))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"encodeframe"},(0,i.kt)("inlineCode",{parentName:"h3"},"EncodeFrame")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"is_success = enc.EncodeFrame(PyArrayFrame)\n")),(0,i.kt)("p",null,"Encode one frame into the video. Note that in most cases, the frame will not be written to the file instantly. Instead of, the frames will be saved in a low-level buffer of the codec. Only when ",(0,i.kt)("a",{parentName:"p",href:"#ffmpegclose"},(0,i.kt)("inlineCode",{parentName:"a"},"FFmpegClose()"))," is called, the frames in the buffer will be flushed into the file."),(0,i.kt)("h4",{id:"requires"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"PyArrayFrame")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"np.ndarray")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(l.Z,{icon:p.Z,mdxType:"InlineIcon"})),(0,i.kt)("td",{parentName:"tr",align:"left"},"An array with a shape of ",(0,i.kt)("inlineCode",{parentName:"td"},"(H, W, C)"),", where ",(0,i.kt)("inlineCode",{parentName:"td"},"(H, W)")," are the source height (",(0,i.kt)("inlineCode",{parentName:"td"},"heightSrc"),") and source width (",(0,i.kt)("inlineCode",{parentName:"td"},"widthSrc"),") respectively. ",(0,i.kt)("inlineCode",{parentName:"td"},"C")," means the 3 RGB channel.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"is_success")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"bool")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The status of the frame encoding. If the given frame succeeds to be encoded, will return ",(0,i.kt)("inlineCode",{parentName:"td"},"True"),"; Otherwise, will return ",(0,i.kt)("inlineCode",{parentName:"td"},"False"),".")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ffmpegclose"},(0,i.kt)("inlineCode",{parentName:"h3"},"FFmpegClose")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"enc.FFmpegClose()\n")),(0,i.kt)("p",null,"Close the video file. Calling this method will flush all buffered frames into the file. Then the video tail will be writen to the file. If users does not call this method explicitly, it will be called when ",(0,i.kt)("a",{parentName:"p",href:"#clear"},(0,i.kt)("inlineCode",{parentName:"a"},"clear()"))," is called or when the encoder is destructed."),(0,i.kt)("h2",{id:"operators"},"Operators"),(0,i.kt)("h3",{id:"__str__"},(0,i.kt)("inlineCode",{parentName:"h3"},"__str__")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"info = str(enc)\n")),(0,i.kt)("p",null,"Return a brief report of the current encoder status."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("div",{className:"center"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"info")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A brief report of the encoder status, the configurations and parameters will be listed as formatted texts.")))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../examples/transcoding"},(0,i.kt)("em",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"em"},"Transcoding")))," in the tutorial. Here we also show some specific configurations:"),(0,i.kt)("h3",{id:"optimize-the-video-encoding"},"Optimize the video encoding"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"...\ndec = mpegCoder.MpegDecoder()\n...\nenc = mpegCoder.MpegEncoder()\nenc.setParameter(decoder=dec, codecName='libx265', videoPath='test-video-x265.mp4', GOPSize=24, maxBframe=16)\n...\n")),(0,i.kt)("h3",{id:"rescale-and-resample-the-video"},"Rescale and resample the video"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"...\nenc = mpegCoder.MpegEncoder()\nenc.setParameter(width=1280, height=720, frameRate=(5, 1), codecName='libx265', videoPath='test-video-x265.mp4')\n...\n")),(0,i.kt)("h3",{id:"use-the-av1-encoder"},"Use the AV1 encoder"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"...\nenc = mpegCoder.MpegEncoder()\nenc.setParameter(width=1280, height=720, codecName='libsvtav1', videoPath='test-video-av1.mp4')\n...\n")),(0,i.kt)("h3",{id:"use-multi-thread-encoding"},"Use multi-thread encoding"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"...\nenc = mpegCoder.MpegEncoder()\nenc.setParameter(nthread=8)\n...\n")))}v.isMDXComponent=!0},2895:function(e,t){t.Z={body:'<path fill="currentColor" fill-rule="evenodd" d="m14.431 3.323l-8.47 10l-.79-.036l-3.35-4.77l.818-.574l2.978 4.24l8.051-9.506l.764.646z" clip-rule="evenodd"/>'}},6577:function(e,t){t.Z={body:'<path fill="currentColor" d="M11.34 9.71h.71l2.67-2.67v-.71L13.38 5h-.7l-1.82 1.81h-5V5.56l1.86-1.85V3l-2-2H5L1 5v.71l2 2h.71l1.14-1.15v5.79l.5.5H10v.52l1.33 1.34h.71l2.67-2.67v-.71L13.37 10h-.7l-1.86 1.85h-5v-4H10v.48l1.34 1.38zm1.69-3.65l.63.63l-2 2l-.63-.63l2-2zm0 5l.63.63l-2 2l-.63-.63l2-2zM3.35 6.65l-1.29-1.3l3.29-3.29l1.3 1.29l-3.3 3.3z"/>'}},7508:function(e,t){t.Z={body:'<path fill="currentColor" fill-rule="evenodd" d="M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0 1 14.25 15h-9a.75.75 0 0 1 0-1.5h9a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 10 4.25V1.5H5.75a.25.25 0 0 0-.25.25v2.5a.75.75 0 0 1-1.5 0v-2.5zm7.5-.188V4.25c0 .138.112.25.25.25h2.688a.252.252 0 0 0-.011-.013l-2.914-2.914a.272.272 0 0 0-.013-.011zM5.72 6.72a.75.75 0 0 0 0 1.06l1.47 1.47l-1.47 1.47a.75.75 0 1 0 1.06 1.06l2-2a.75.75 0 0 0 0-1.06l-2-2a.75.75 0 0 0-1.06 0zM3.28 7.78a.75.75 0 0 0-1.06-1.06l-2 2a.75.75 0 0 0 0 1.06l2 2a.75.75 0 0 0 1.06-1.06L1.81 9.25l1.47-1.47z"/>'}}}]);