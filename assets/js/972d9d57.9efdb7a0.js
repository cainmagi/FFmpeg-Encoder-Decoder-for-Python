(self.webpackChunkmpeg_coder=self.webpackChunkmpeg_coder||[]).push([[937],{4498:function(e,t,n){"use strict";n.r(t),n.d(t,{contentTitle:function(){return h},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return g}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),i=n(8793),l=n(8617),p={body:'<path fill-rule="evenodd" d="M8.75.75a.75.75 0 0 0-1.5 0V2h-.984c-.305 0-.604.08-.869.23l-1.288.737A.25.25 0 0 1 3.984 3H1.75a.75.75 0 0 0 0 1.5h.428L.066 9.192a.75.75 0 0 0 .154.838l.53-.53l-.53.53v.001l.002.002l.002.002l.006.006l.016.015l.045.04a3.514 3.514 0 0 0 .686.45A4.492 4.492 0 0 0 3 11c.88 0 1.556-.22 2.023-.454a3.515 3.515 0 0 0 .686-.45l.045-.04l.016-.015l.006-.006l.002-.002l.001-.002L5.25 9.5l.53.53a.75.75 0 0 0 .154-.838L3.822 4.5h.162c.305 0 .604-.08.869-.23l1.289-.737a.25.25 0 0 1 .124-.033h.984V13h-2.5a.75.75 0 0 0 0 1.5h6.5a.75.75 0 0 0 0-1.5h-2.5V3.5h.984a.25.25 0 0 1 .124.033l1.29.736c.264.152.563.231.868.231h.162l-2.112 4.692a.75.75 0 0 0 .154.838l.53-.53l-.53.53v.001l.002.002l.002.002l.006.006l.016.015l.045.04a3.517 3.517 0 0 0 .686.45A4.492 4.492 0 0 0 13 11c.88 0 1.556-.22 2.023-.454a3.512 3.512 0 0 0 .686-.45l.045-.04l.01-.01l.006-.005l.006-.006l.002-.002l.001-.002l-.529-.531l.53.53a.75.75 0 0 0 .154-.838L13.823 4.5h.427a.75.75 0 0 0 0-1.5h-2.234a.25.25 0 0 1-.124-.033l-1.29-.736A1.75 1.75 0 0 0 9.735 2H8.75V.75zM1.695 9.227c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L3 6.327l-1.305 2.9zm10 0c.285.135.718.273 1.305.273s1.02-.138 1.305-.273L13 6.327l-1.305 2.9z" fill="currentColor"/>',width:16,height:16},d={body:'<path fill-rule="evenodd" d="M5 3.25a.75.75 0 1 1-1.5 0a.75.75 0 0 1 1.5 0zm0 2.122a2.25 2.25 0 1 0-1.5 0v.878A2.25 2.25 0 0 0 5.75 8.5h1.5v2.128a2.251 2.251 0 1 0 1.5 0V8.5h1.5a2.25 2.25 0 0 0 2.25-2.25v-.878a2.25 2.25 0 1 0-1.5 0v.878a.75.75 0 0 1-.75.75h-4.5A.75.75 0 0 1 5 6.25v-.878zm3.75 7.378a.75.75 0 1 1-1.5 0a.75.75 0 0 1 1.5 0zm3-8.75a.75.75 0 1 0 0-1.5a.75.75 0 0 0 0 1.5z" fill="currentColor"/>',width:16,height:16},s={body:'<path fill-rule="evenodd" d="M13.5 3a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0zM15 3a3 3 0 0 1-5.175 2.066l-3.92 2.179a3.005 3.005 0 0 1 0 1.51l3.92 2.179a3 3 0 1 1-.73 1.31l-3.92-2.178a3 3 0 1 1 0-4.133l3.92-2.178A3 3 0 1 1 15 3zm-1.5 10a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0zm-9-5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0z" fill="currentColor"/>',width:16,height:16},m=["components"],c={id:"introduction",title:"Introduction",description:"The introduction of mpegCoder. The package mpegCoder is used for encoding, decoding, receiving streams and pushing streams. This project is totally dependent on FFMpeg.",slug:"/"},h=void 0,u={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"The introduction of mpegCoder. The package mpegCoder is used for encoding, decoding, receiving streams and pushing streams. This project is totally dependent on FFMpeg.",source:"@site/docs/introduction.mdx",sourceDirName:".",slug:"/",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/",editUrl:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/edit/docs/docs/introduction.mdx",version:"current",frontMatter:{id:"introduction",title:"Introduction",description:"The introduction of mpegCoder. The package mpegCoder is used for encoding, decoding, receiving streams and pushing streams. This project is totally dependent on FFMpeg.",slug:"/"},sidebar:"docs",next:{title:"PyPI",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/installation/pypi"}},g=[{value:"Related materials",id:"related-materials",children:[]}],k={toc:g};function f(e){var t=e.components,n=(0,r.Z)(e,m);return(0,a.kt)("wrapper",(0,o.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'This project is also named as "',(0,a.kt)("em",{parentName:"p"},"FFmpeg-Encoder-Decoder-for-Python"),'". It is implemented based on ',(0,a.kt)("a",{parentName:"p",href:"https://ffmpeg.org",title:"FFMpeg"},"FFMpeg",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),", ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/c-api/index.html",title:"Python-C-API"},"Python-C-API",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"}))," and ",(0,a.kt)("a",{parentName:"p",href:"https://en.cppreference.com/w/",title:"C++ 11"},"C++11",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),". It is under ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/blob/master/LICENSE"},"GPL v3 License",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),", and recommended for researching purposes."),(0,a.kt)("p",null,"With this package, users could:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make use of ",(0,a.kt)("strong",{parentName:"li"},"all")," FFMpeg video encoders and decoders. When decoding a video (or an online stream), like the original FFMpeg (C version), the provided APIs could detect the video format and codec format automatically. When encoding a video, users could control the codec format, bit rate and some other options by setting parameters."),(0,a.kt)("li",{parentName:"ul"},"Work with FFMpeg directly. This project invokes the FFMpeg C APIs in the bottom level. Unlike ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/kkroening/ffmpeg-python",title:"ffmpeg-python"},"ffmpeg-python",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"}))," and ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/deuteronomy-works/pyffmpeg",title:"pyffmpeg"},"pyffmpeg",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),", our project is not driven by the FFMpeg CLI interfaces. The data format used by this package is ",(0,a.kt)("a",{parentName:"li",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,a.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),". In other words, our project enables users to combine ",(0,a.kt)("a",{parentName:"li",href:"https://numpy.org",title:"numpy"},"numpy",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"}))," and FFMpeg directly."),(0,a.kt)("li",{parentName:"ul"},"Frame-level APIs. Unlike ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/deuteronomy-works/pyffmpeg",title:"pyffmpeg"},"pyffmpeg",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),", this package is not a simple wrapper of FFMpeg. Users could works on the frame-level APIs. For example, when decoding a video, users could get the data frame-by-frame. Each frame is a 3D ",(0,a.kt)("a",{parentName:"li",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,a.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),"."),(0,a.kt)("li",{parentName:"ul"},"Pre-compiled package. This package has been pre-compiled by the author. If users download the dependent dynamic libraries (",(0,a.kt)("inlineCode",{parentName:"li"},".so")," or ",(0,a.kt)("inlineCode",{parentName:"li"},".dll"),"), they do not need to compile the package by themself.")),(0,a.kt)("p",null,"However, users could not work with this project in such cases:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Platform limited. Currently, we only support Linux and Windows. The Linux release is pre-compiled on Debian. It has been only tested in Ubuntu, Debian and Windows. In other cases, the pre-compiled library may not work. Users may need to compile the package by themselves."),(0,a.kt)("li",{parentName:"ul"},"Version limited. Currently, our project only works with FFMpeg ",(0,a.kt)("inlineCode",{parentName:"li"},"4.4"),". Users need to download the dependent dynamic libraries to make the package work. The legacy versions of this project supports FFMpeg ",(0,a.kt)("inlineCode",{parentName:"li"},"3.3"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"3.4.2")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"4.0"),". However, the legacy built packages are not technically supported now."),(0,a.kt)("li",{parentName:"ul"},"Audio not supported. Although the original FFMpeg supports both video and audio streams, our project only works on video streams. For example, if a video contains audio streams, our package would omit all audio frames in the bottom level. In other words, you ",(0,a.kt)("strong",{parentName:"li"},"could not")," perform audio analysis now. In the future (",(0,a.kt)("inlineCode",{parentName:"li"},"v4"),"), we may support the audio frame analysis."),(0,a.kt)("li",{parentName:"ul"},"Filters not supported. Although the original FFMpeg supports some video processing tools (",(0,a.kt)("a",{parentName:"li",href:"http://ffmpeg.org/doxygen/trunk/group__lavfi.html",title:"libavfilter"},(0,a.kt)("inlineCode",{parentName:"a"},"avfilter"),(0,a.kt)(l.Z,{mdxType:"IconExternalLink"}))," and ",(0,a.kt)("a",{parentName:"li",href:"http://ffmpeg.org/doxygen/trunk/group__lpp.html",title:"libpostproc"},(0,a.kt)("inlineCode",{parentName:"a"},"postproc"),(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),"), our implementation drops these modules. Instead, we suggest that users should process the frames with ",(0,a.kt)("a",{parentName:"li",href:"https://pypi.org/project/Pillow",title:"Pillow"},"pillow",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"}))," or ",(0,a.kt)("a",{parentName:"li",href:"https://pypi.org/project/opencv-python",title:"OpenCV Python"},"openCV",(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),". On the other hand, our implementation still supports frame scaling and re-sampling (supported by ",(0,a.kt)("a",{parentName:"li",href:"http://ffmpeg.org/doxygen/trunk/group__libsws.html",title:"libswscale"},(0,a.kt)("inlineCode",{parentName:"a"},"swscale"),(0,a.kt)(l.Z,{mdxType:"IconExternalLink"}))," and ",(0,a.kt)("a",{parentName:"li",href:"http://ffmpeg.org/doxygen/trunk/group__lswr.html",title:"libswresample"},(0,a.kt)("inlineCode",{parentName:"a"},"swresample"),(0,a.kt)(l.Z,{mdxType:"IconExternalLink"})),").")),(0,a.kt)("h2",{id:"related-materials"},"Related materials"),(0,a.kt)("p",null,"License of this project:"),(0,a.kt)("p",null,(0,a.kt)(i.Z,{to:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/blob/master/LICENSE",icon:p,mdxType:"DarkButton"},"MIT License")),(0,a.kt)("p",null,"Guidelines for the contributions:"),(0,a.kt)("p",null,(0,a.kt)(i.Z,{to:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/blob/master/CONTRIBUTING.md",icon:d,mdxType:"DarkButton"},"Contributions")),(0,a.kt)("p",null,"Contributor covenant code of conduct:"),(0,a.kt)("p",null,(0,a.kt)(i.Z,{to:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/blob/master/CODE_OF_CONDUCT.md",icon:s,mdxType:"DarkButton"},"Code of Conduct")))}f.isMDXComponent=!0}}]);