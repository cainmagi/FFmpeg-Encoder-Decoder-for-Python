(self.webpackChunkmpeg_coder=self.webpackChunkmpeg_coder||[]).push([[50],{852:function(e,t){"use strict";t.Z={body:'<g fill="currentColor"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.431 3.323l-8.47 10l-.79-.036l-3.35-4.77l.818-.574l2.978 4.24l8.051-9.506l.764.646z"/></g>',width:16,height:16}},6075:function(e,t){"use strict";t.Z={body:'<g fill="currentColor"><path d="M11.34 9.71h.71l2.67-2.67v-.71L13.38 5h-.7l-1.82 1.81h-5V5.56l1.86-1.85V3l-2-2H5L1 5v.71l2 2h.71l1.14-1.15v5.79l.5.5H10v.52l1.33 1.34h.71l2.67-2.67v-.71L13.37 10h-.7l-1.86 1.85h-5v-4H10v.48l1.34 1.38zm1.69-3.65l.63.63l-2 2l-.63-.63l2-2zm0 5l.63.63l-2 2l-.63-.63l2-2zM3.35 6.65l-1.29-1.3l3.29-3.29l1.3 1.29l-3.3 3.3z"/></g>',width:16,height:16}},965:function(e,t){"use strict";t.Z={body:'<path fill-rule="evenodd" d="M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0 1 14.25 15h-9a.75.75 0 0 1 0-1.5h9a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 10 4.25V1.5H5.75a.25.25 0 0 0-.25.25v2.5a.75.75 0 0 1-1.5 0v-2.5zm7.5-.188V4.25c0 .138.112.25.25.25h2.688a.252.252 0 0 0-.011-.013l-2.914-2.914a.272.272 0 0 0-.013-.011zM5.72 6.72a.75.75 0 0 0 0 1.06l1.47 1.47l-1.47 1.47a.75.75 0 1 0 1.06 1.06l2-2a.75.75 0 0 0 0-1.06l-2-2a.75.75 0 0 0-1.06 0zM3.28 7.78a.75.75 0 0 0-1.06-1.06l-2 2a.75.75 0 0 0 0 1.06l2 2a.75.75 0 0 0 1.06-1.06L1.81 9.25l1.47-1.47z" fill="currentColor"/>',width:16,height:16}},5549:function(e,t,a){"use strict";a.d(t,{A:function(){return d},q:function(){return l}});var n=a(7294),r=a(6742),i="https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/blob/e5d48b9c65152a303eddccbe65dad8059d0556ae/MpegCoder";function d(e){var t=i+"/"+e.url;return n.createElement(r.Z,{to:t,className:"noline"},e.children)}function l(e){return n.createElement("span",{style:{padding:"0 "+e.padx}},"\xb7")}l.defaultProps={padx:"1ex"}},6822:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return k},contentTitle:function(){return h},metadata:function(){return N},toc:function(){return u},default:function(){return f}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),d=a(8617),l=a(5514),o=a(6075),p=a(852),m=a(965),s=a(5549),c=["components"],k={id:"MpegDecoder",title:"MpegDecoder",sidebar_label:"MpegDecoder",slug:"/apis/MpegDecoder",description:"This class has wrapped the C-API of FFMpeg decoder so that users could call its methods to decode the frame data in python quickly."},h=void 0,N={unversionedId:"apis/MpegDecoder",id:"apis/MpegDecoder",isDocsHomePage:!1,title:"MpegDecoder",description:"This class has wrapped the C-API of FFMpeg decoder so that users could call its methods to decode the frame data in python quickly.",source:"@site/docs/apis/MpegDecoder.mdx",sourceDirName:"apis",slug:"/apis/MpegDecoder",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/apis/MpegDecoder",editUrl:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/edit/docs/docs/apis/MpegDecoder.mdx",version:"current",frontMatter:{id:"MpegDecoder",title:"MpegDecoder",sidebar_label:"MpegDecoder",slug:"/apis/MpegDecoder",description:"This class has wrapped the C-API of FFMpeg decoder so that users could call its methods to decode the frame data in python quickly."},sidebar:"apis",previous:{title:"setGlobal",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/apis/setGlobal"},next:{title:"MpegEncoder",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/apis/MpegEncoder"}},u=[{value:"Arguments",id:"arguments",children:[{value:"Requires",id:"requires",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>clear</code>",id:"clear",children:[]},{value:"<code>resetPath</code>",id:"resetpath",children:[]},{value:"<code>getParameter</code>",id:"getparameter",children:[]},{value:"<code>setParameter</code>",id:"setparameter",children:[]},{value:"<code>FFmpegSetup</code>",id:"ffmpegsetup",children:[]},{value:"<code>dumpFile</code>",id:"dumpfile",children:[]},{value:"<code>ExtractFrame</code>",id:"extractframe",children:[]},{value:"<code>ExtractFrameByTime</code>",id:"extractframebytime",children:[]},{value:"<code>ExtractGOP</code>",id:"extractgop",children:[]},{value:"<code>ExtractGOPByTime</code>",id:"extractgopbytime",children:[]},{value:"<code>ResetGOPPosition</code>",id:"resetgopposition",children:[]}]},{value:"Operators",id:"operators",children:[{value:"<code>__str__</code>",id:"__str__",children:[]}]},{value:"Examples",id:"examples",children:[{value:"Scale the decoded frame",id:"scale-the-decoded-frame",children:[]},{value:"Use multi-thread decoding",id:"use-multi-thread-decoding",children:[]}]}],g={toc:u};function f(e){var t=e.components,a=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)(l.Z,{icon:o.Z,mdxType:"InlineIcon"})," Class",(0,i.kt)(s.q,{mdxType:"Splitter"}),(0,i.kt)(s.A,{url:"MpegCoder.h#L21",mdxType:"SourceURL"},(0,i.kt)(l.Z,{icon:m.Z,mdxType:"InlineIcon"})," Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"dec = mpegCoder.MpegDecoder(videoPath=None)\n")),(0,i.kt)("p",null,"The frame-level video decoder used for demuxing a video file."),(0,i.kt)("p",null,"This decoder instance serves as a video file reader. It supports:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Decoding the video frames into ",(0,i.kt)("a",{parentName:"li",href:"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html",title:"np.ndarray"},(0,i.kt)("inlineCode",{parentName:"a"},"np.ndarray"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),"."),(0,i.kt)("li",{parentName:"ul"},"Reading video frames consecutively."),(0,i.kt)("li",{parentName:"ul"},"Setting the reading cursor to any position."),(0,i.kt)("li",{parentName:"ul"},"Scaling the decoded video frames to a specific size.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MpegDecoder")," requires users to initialize the decoder before reading frames, and close the video after finishing all works. If the video is not closed manually, an automatical closing would be performed when the decoder is destructed."),(0,i.kt)("h2",{id:"arguments"},"Arguments"),(0,i.kt)("h3",{id:"requires"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The path of the video to be read. Configuring this value will causes the video to be opened by ",(0,i.kt)("a",{parentName:"td",href:"#ffmpegsetup"},(0,i.kt)("inlineCode",{parentName:"a"},"FFmpegSetup()")),". We do not recommend users to set this value when initializing the decoder.")))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"clear"},(0,i.kt)("inlineCode",{parentName:"h3"},"clear")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"dec.clear()\n")),(0,i.kt)("p",null,"Clear all configurations ",(0,i.kt)("strong",{parentName:"p"},"except")," the default video path. If a video is opened by the decoder, ",(0,i.kt)("inlineCode",{parentName:"p"},"clear()")," will close the video automatically."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"We suggest that users should call ",(0,i.kt)("inlineCode",{parentName:"p"},"clear()")," manually, like using other file readers."))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resetpath"},(0,i.kt)("inlineCode",{parentName:"h3"},"resetPath")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"dec.resetPath(videoPath)\n")),(0,i.kt)("p",null,"Reset the default video path to a specific value. Configuring this value will not cause the video to be opened. This method is merely used as a configuration."),(0,i.kt)("h4",{id:"requires-1"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(l.Z,{icon:p.Z,mdxType:"InlineIcon"})),(0,i.kt)("td",{parentName:"tr",align:"left"},"The path of the video to be read.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getparameter"},(0,i.kt)("inlineCode",{parentName:"h3"},"getParameter")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"param = dec.getParameter(paramName=None)\n")),(0,i.kt)("p",null,"Get the video parameter or configuration value. Each time ",(0,i.kt)("inlineCode",{parentName:"p"},"paramName")," only accepts one parameter name."),(0,i.kt)("h4",{id:"requires-2"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"paramName")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the parameter to be checked. If not give, all important parameters, including some private parameters will be returned as a ",(0,i.kt)("inlineCode",{parentName:"td"},"dict"),".")))),(0,i.kt)("p",null,"Here is a list of checkable ",(0,i.kt)("inlineCode",{parentName:"p"},"paramName"),":"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The current path of the read video. If the video is not opened, will return the default video path.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"width")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The width of the read video. This value is determined by the video file.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"height")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The height of the read video. This value is determined by the video file.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"frameCount")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of returned frames in the last frame extraction method.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"coderName")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the codec used for decoding the video.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nthread")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of decoder threads.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"duration")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The total seconds of this video.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"estFrameNum")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The estimated total frame number (may be not accurate).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"avgFrameRate")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The average of FPS of the video stream.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"param")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Determined by ",(0,i.kt)("inlineCode",{parentName:"td"},"paramName")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The returned value of the parameter. If no ",(0,i.kt)("inlineCode",{parentName:"td"},"paramName")," is given, will return all important parameters. These parameters could serve as ",(0,i.kt)("inlineCode",{parentName:"td"},"configDict")," for ",(0,i.kt)("inlineCode",{parentName:"td"},"MpegEncoder")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"MpegServer"),".")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setparameter"},(0,i.kt)("inlineCode",{parentName:"h3"},"setParameter")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"dec.setParameter(widthDst=None, heightDst=None, nthread=None)\n")),(0,i.kt)("p",null,"Set the configurations of the decoder. To make the configurations take effects, these parameters need to be configured before ",(0,i.kt)("a",{parentName:"p",href:"#ffmpegsetup"},(0,i.kt)("inlineCode",{parentName:"a"},"FFmpegSetup()")),"."),(0,i.kt)("h4",{id:"requires-3"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"widthDst")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The width of extracted frames. Configuring both ",(0,i.kt)("inlineCode",{parentName:"td"},"widthDst")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"heightDst")," will cause the frames to be scaled. If a value ",(0,i.kt)("inlineCode",{parentName:"td"},"<=0")," is given, this value would take no effect.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"heightDst")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The height of extracted frames. Configuring both ",(0,i.kt)("inlineCode",{parentName:"td"},"widthDst")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"heightDst")," will cause the frames to be scaled. If a value ",(0,i.kt)("inlineCode",{parentName:"td"},"<=0")," is given, this value would take no effect.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"nthread")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of decoder threads.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ffmpegsetup"},(0,i.kt)("inlineCode",{parentName:"h3"},"FFmpegSetup")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"dec.FFmpegSetup(videoPath=None)\n")),(0,i.kt)("p",null,"Open the video file, and initialize the decoder. After the decoder initialized, the video parameters will be loaded, the video format will be parsed and the video codec will be detected automatically. If an video is opening by the decoder now, this video will be closed first, then the new video will be opened."),(0,i.kt)("h4",{id:"requires-4"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"videoPath")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"The path of the video to be read. If not given, will use the default path configured by ",(0,i.kt)("a",{parentName:"td",href:"#resetpath"},(0,i.kt)("inlineCode",{parentName:"a"},"resetPath()")),". Setting this argument will also cause the default video path to change.")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"dumpfile"},(0,i.kt)("inlineCode",{parentName:"h3"},"dumpFile")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"dec.dumpFile()\n")),(0,i.kt)("p",null,"Print out a brief preview of the video meta-data to the standard output."),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This method is based on C stdout. Therefore, these results could not be redirected or catched by python."))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"extractframe"},(0,i.kt)("inlineCode",{parentName:"h3"},"ExtractFrame")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"frames = dec.ExtractFrame(framePos=0, frameNum=1)\n")),(0,i.kt)("p",null,"Extract several frames at a specific position."),(0,i.kt)("p",null,"This API is recommended to be used when users only want to fetch few frames. The API will seek the starting position defined by ",(0,i.kt)("inlineCode",{parentName:"p"},"framePos"),", then extract the required number of frames."),(0,i.kt)("h4",{id:"requires-5"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"framePos")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(l.Z,{icon:p.Z,mdxType:"InlineIcon"})),(0,i.kt)("td",{parentName:"tr",align:"left"},"A frame index used as the starting postion. This position will be used by ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#gaa23f7619d8d4ea0857065d9979c75ac8",title:"av_seek_frame"},(0,i.kt)("inlineCode",{parentName:"a"},"av_seek_frame"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," at the bottom level.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"frameNum")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(l.Z,{icon:p.Z,mdxType:"InlineIcon"})),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of frames that require to be extracted.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"frames")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"np.ndarray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An array with a shape of ",(0,i.kt)("inlineCode",{parentName:"td"},"(N, H, W, C)"),", where ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," is given by ",(0,i.kt)("inlineCode",{parentName:"td"},"frameNum")," (if the deocder reaches the end of the file, ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," may be smaller than ",(0,i.kt)("inlineCode",{parentName:"td"},"frameNum"),"), ",(0,i.kt)("inlineCode",{parentName:"td"},"(H, W)")," are the height and width of the returned frames respectively. ",(0,i.kt)("inlineCode",{parentName:"td"},"C")," means the 3 RGB channel. If no frames could be extracted, this method would return ",(0,i.kt)("inlineCode",{parentName:"td"},"None"),".")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"extractframebytime"},(0,i.kt)("inlineCode",{parentName:"h3"},"ExtractFrameByTime")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"frames = dec.ExtractFrameByTime(timePos=0, frameNum=1)\n")),(0,i.kt)("p",null,"Extract several frames at a specific position."),(0,i.kt)("p",null,"The functionality of this API is the same as ",(0,i.kt)("a",{parentName:"p",href:"#extractframe"},(0,i.kt)("inlineCode",{parentName:"a"},"ExtractFrame()")),". Instead of using a frame index, this method seek the reading cursor by a time point (the unit is ",(0,i.kt)("inlineCode",{parentName:"p"},"second"),")."),(0,i.kt)("h4",{id:"requires-6"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"timePos")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(l.Z,{icon:p.Z,mdxType:"InlineIcon"})),(0,i.kt)("td",{parentName:"tr",align:"left"},"A time index (second) used as the starting postion. This position will be used by ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#gaa23f7619d8d4ea0857065d9979c75ac8",title:"av_seek_frame"},(0,i.kt)("inlineCode",{parentName:"a"},"av_seek_frame"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," at the bottom level.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"frameNum")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(l.Z,{icon:p.Z,mdxType:"InlineIcon"})),(0,i.kt)("td",{parentName:"tr",align:"left"},"The number of frames that require to be extracted.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"frames")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"np.ndarray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An array with a shape of ",(0,i.kt)("inlineCode",{parentName:"td"},"(N, H, W, C)"),", where ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," is given by ",(0,i.kt)("inlineCode",{parentName:"td"},"frameNum")," (if the deocder reaches the end of the file, ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," may be smaller than ",(0,i.kt)("inlineCode",{parentName:"td"},"frameNum"),"), ",(0,i.kt)("inlineCode",{parentName:"td"},"(H, W)")," are the height and width of the returned frames respectively. ",(0,i.kt)("inlineCode",{parentName:"td"},"C")," means the 3 RGB channel. If no frames could be extracted, this method would return ",(0,i.kt)("inlineCode",{parentName:"td"},"None"),".")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"extractgop"},(0,i.kt)("inlineCode",{parentName:"h3"},"ExtractGOP")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"gop = dec.ExtractGOP(framePos=-1)\n")),(0,i.kt)("p",null,"Extract a ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Group_of_pictures",title:"Group of pictures | Wikipedia"},"Group of Pictures",(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),". The GOP size is determined by the video file. Users could use ",(0,i.kt)("a",{parentName:"p",href:"#getparameter"},(0,i.kt)("inlineCode",{parentName:"a"},"getParameter()"))," to find the GOP size."),(0,i.kt)("p",null,"We recommend to use ",(0,i.kt)("inlineCode",{parentName:"p"},"dec.ExtractGOP()")," when a video file needs to be read consecutively. When the returned value is ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),", the read cursor reaches the end of the video."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Each time this method is used with ",(0,i.kt)("inlineCode",{parentName:"p"},"framePos>=0"),", the current reading cursor will be reset by ",(0,i.kt)("inlineCode",{parentName:"p"},"framePos"),"."))),(0,i.kt)("h4",{id:"requires-7"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"framePos")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"A frame index used for seeking the starting position of the GOP. This position will be used by ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#gaa23f7619d8d4ea0857065d9979c75ac8",title:"av_seek_frame"},(0,i.kt)("inlineCode",{parentName:"a"},"av_seek_frame"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," at the bottom level. If configured as ",(0,i.kt)("inlineCode",{parentName:"td"},"<0"),", this value will not take effects, the GOP will be extracted from the current reading cursor position.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"gop")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"np.ndarray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An array with a shape of ",(0,i.kt)("inlineCode",{parentName:"td"},"(N, H, W, C)"),", where ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," is the GOP size (if the deocder reaches the end of the file, ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," may be smaller than the GOP size), ",(0,i.kt)("inlineCode",{parentName:"td"},"(H, W)")," are the height and width of the returned frames respectively. ",(0,i.kt)("inlineCode",{parentName:"td"},"C")," means the 3 RGB channel. If no frames could be extracted, this method would return ",(0,i.kt)("inlineCode",{parentName:"td"},"None"),".")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"extractgopbytime"},(0,i.kt)("inlineCode",{parentName:"h3"},"ExtractGOPByTime")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"gop = dec.ExtractGOPByTime(timePos=-1)\n")),(0,i.kt)("p",null,"Extract a ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Group_of_pictures",title:"Group of pictures | Wikipedia"},"Group of Pictures",(0,i.kt)(d.Z,{mdxType:"IconExternalLink"})),". Instead of using a frame index, this method uses a time point (the unit is ",(0,i.kt)("inlineCode",{parentName:"p"},"second"),") to seek the starting position."),(0,i.kt)("p",null,"We recommend to use ",(0,i.kt)("inlineCode",{parentName:"p"},"dec.ExtractGOPByTime()")," when a video file needs to be read consecutively. When the returned value is ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),", the read cursor reaches the end of the video."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Each time this method is used with ",(0,i.kt)("inlineCode",{parentName:"p"},"timePos>=0"),", the current reading cursor will be reset by ",(0,i.kt)("inlineCode",{parentName:"p"},"timePos"),"."))),(0,i.kt)("h4",{id:"requires-8"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"timePos")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"A time index (second) used for seeking the starting position of the GOP. This position will be used by ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#gaa23f7619d8d4ea0857065d9979c75ac8",title:"av_seek_frame"},(0,i.kt)("inlineCode",{parentName:"a"},"av_seek_frame"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," at the bottom level. If configured as ",(0,i.kt)("inlineCode",{parentName:"td"},"<0"),", this value will not take effects, the GOP will be extracted from the current reading cursor position.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"gop")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"np.ndarray")),(0,i.kt)("td",{parentName:"tr",align:"left"},"An array with a shape of ",(0,i.kt)("inlineCode",{parentName:"td"},"(N, H, W, C)"),", where ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," is the GOP size (if the deocder reaches the end of the file, ",(0,i.kt)("inlineCode",{parentName:"td"},"N")," may be smaller than the GOP size), ",(0,i.kt)("inlineCode",{parentName:"td"},"(H, W)")," are the height and width of the returned frames respectively. ",(0,i.kt)("inlineCode",{parentName:"td"},"C")," means the 3 RGB channel. If no frames could be extracted, this method would return ",(0,i.kt)("inlineCode",{parentName:"td"},"None"),".")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resetgopposition"},(0,i.kt)("inlineCode",{parentName:"h3"},"ResetGOPPosition")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"gop = dec.ResetGOPPosition(framePos=-1, timePos=-1)\n")),(0,i.kt)("p",null,"Reset the current reading cursor of ",(0,i.kt)("a",{parentName:"p",href:"#extractgop"},(0,i.kt)("inlineCode",{parentName:"a"},"ExtractGOP()"))," and ",(0,i.kt)("a",{parentName:"p",href:"#extractgopbytime"},(0,i.kt)("inlineCode",{parentName:"a"},"ExtractGOPByTime()")),". The cursor could be set by either a frame index or a time point (",(0,i.kt)("inlineCode",{parentName:"p"},"second"),"). This method is merely a configuration, and will not return the GOP."),(0,i.kt)("h4",{id:"requires-9"},"Requires"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"framePos")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"int")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"A frame index used for seeking the starting position of the GOP. This position will be used by ",(0,i.kt)("a",{parentName:"td",href:"https://ffmpeg.org/doxygen/trunk/group__lavf__decoding.html#gaa23f7619d8d4ea0857065d9979c75ac8",title:"av_seek_frame"},(0,i.kt)("inlineCode",{parentName:"a"},"av_seek_frame"),(0,i.kt)(d.Z,{mdxType:"IconExternalLink"}))," at the bottom level. If configured as ",(0,i.kt)("inlineCode",{parentName:"td"},"<0"),", this value will not take effects.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"timePos")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"float")),(0,i.kt)("td",{parentName:"tr",align:"center"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"A time index (second) used for seeking the starting position of the GOP. If this value is configured as ",(0,i.kt)("inlineCode",{parentName:"td"},"<0")," or the ",(0,i.kt)("inlineCode",{parentName:"td"},"framePos")," is configured, it will not take effects.")))),(0,i.kt)("h2",{id:"operators"},"Operators"),(0,i.kt)("h3",{id:"__str__"},(0,i.kt)("inlineCode",{parentName:"h3"},"__str__")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"info = str(dec)\n")),(0,i.kt)("p",null,"Return a brief report of the current decoder status."),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Argument"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("center",null,"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"info")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"str")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A brief report of the decoder status, the configurations and parameters will be listed as formatted texts.")))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../examples/decoding"},(0,i.kt)("em",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"em"},"Decoding")))," in the tutorial. Here we also show some specific configurations:"),(0,i.kt)("h3",{id:"scale-the-decoded-frame"},"Scale the decoded frame"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"...\ndec = mpegCoder.MpegDecoder()\ndec.setParameter(widthDst=720, heightDst=486)\n...\n")),(0,i.kt)("h3",{id:"use-multi-thread-decoding"},"Use multi-thread decoding"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"...\ndec = mpegCoder.MpegDecoder()\ndec.setParameter(nthread=8)\n...\n")))}f.isMDXComponent=!0}}]);