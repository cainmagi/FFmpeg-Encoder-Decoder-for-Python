"use strict";(self.webpackChunkmpeg_coder=self.webpackChunkmpeg_coder||[]).push([[4866],{8793:function(e,t,n){var o=n(7294),i=n(9960),a=n(1954),r=n(9575);t.Z=function(e){var t=(0,o.useState)(!1),n=t[0],l=t[1];(0,o.useEffect)((function(){l(!0)}),[]);var s,p,u,c=(s=(0,r.If)(),p=s.colorMode,s.setColorMode,"dark"===p?"button--secondary button--outline":"button--secondary");return u=e.index?"button "+c+" button--lg button--index":"button "+c+" button--lg",o.createElement(i.Z,{key:String(n),className:u,to:e.to},e.icon&&o.createElement(a.Wb,{icon:e.icon,width:"1.35rem",style:{verticalAlign:"-0.3rem",marginRight:"1ex"}}),e.children)}},1415:function(e,t,n){n.r(t),n.d(t,{assets:function(){return h},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return m},metadata:function(){return g},toc:function(){return b}});var o=n(3117),i=n(102),a=(n(7294),n(3905)),r=n(8793),l=n(5514),s=n(541),p=n(3751),u=n(3119),c=["components"],m={id:"qna",title:"Questions and answers",sidebar_label:"Q&A",slug:"/troubleshooting/qna",description:"The questions and answers for mpegCoder."},d=void 0,g={unversionedId:"troubleshooting/qna",id:"troubleshooting/qna",title:"Questions and answers",description:"The questions and answers for mpegCoder.",source:"@site/docs/troubleshooting/qna.mdx",sourceDirName:"troubleshooting",slug:"/troubleshooting/qna",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/next/troubleshooting/qna",editUrl:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/edit/docs/docs/troubleshooting/qna.mdx",tags:[],version:"current",frontMatter:{id:"qna",title:"Questions and answers",sidebar_label:"Q&A",slug:"/troubleshooting/qna",description:"The questions and answers for mpegCoder."},sidebar:"docs",previous:{title:"Running",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/next/troubleshooting/running"},next:{title:"Changelog",permalink:"/FFmpeg-Encoder-Decoder-for-Python/docs/next/changelog"}},h={},b=[{value:"Introduction",id:"introduction",level:2},{value:"The balance between vulnerability and compatibility",id:"the-balance-between-vulnerability-and-compatibility",level:3},{value:"Plan for audio processing",id:"plan-for-audio-processing",level:3},{value:"Plan for no-encoding streaming",id:"plan-for-no-encoding-streaming",level:3},{value:"Commercial plan",id:"commercial-plan",level:3}],k={toc:b};function f(e){var t=e.components,n=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"If you feel like asking more questions, please contact me by the email:"),(0,a.kt)("p",null,(0,a.kt)(r.Z,{to:"mailto:cainmagi@gmail.com",icon:p.Z,mdxType:"DarkButton"},"Contact me")),(0,a.kt)("h3",{id:"the-balance-between-vulnerability-and-compatibility"},"The balance between vulnerability and compatibility"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Question"),": Is it OK to report a security vulnerability issue?")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Answer"),": Sure, because the FFMpeg used in the Linux version is compiled by myself. A good example can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cainmagi/FFmpeg-Encoder-Decoder-for-Python/issues/4"},(0,a.kt)(l.Z,{icon:u.Z,mdxType:"InlineIcon"})," here #4"),". However, there is an exception case. For most dependencies, I can pack them together with the release of ",(0,a.kt)("inlineCode",{parentName:"p"},"mpegCoder"),". But some essenstial libraries, like ",(0,a.kt)("inlineCode",{parentName:"p"},"GLibC")," is impossible to be loaded locally. In this case, the compatibility is more important than the vulnerability. For example, if a newer ",(0,a.kt)("inlineCode",{parentName:"p"},"GlibC")," version can solve a vulnerability issue, but it is only provided in the devel versions of the Debian / Ubuntu releases, I will prefer to preserve the current low version. If I bump into a new version, users with a stable Debian / Ubuntu releases may have to compile ",(0,a.kt)("inlineCode",{parentName:"p"},"GlibC")," before using ",(0,a.kt)("inlineCode",{parentName:"p"},"mpegCoder"),"."))),(0,a.kt)("h3",{id:"plan-for-audio-processing"},"Plan for audio processing"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Question"),": The audio processing is not supported by ",(0,a.kt)("inlineCode",{parentName:"p"},"mpegCoder 3.x"),". Will it be implemented future?")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Answer"),": Sure. The audio processing would be supported since ",(0,a.kt)("inlineCode",{parentName:"p"},"mpegCoder 4.x"),". But I do not have enough time on this project, so it may take a long time to implement. I am very glad if there is anyone willing to send me a pull request (PR) about this."))),(0,a.kt)("h3",{id:"plan-for-no-encoding-streaming"},"Plan for no-encoding streaming"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Question"),": In ",(0,a.kt)("inlineCode",{parentName:"p"},"mpegCoder 3.x"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MpegServer")," only support streaming while encoding. Will there be a class for reading a video while pushing it as a stream?")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Answer"),": No. I believe that using the official FFMpeg is a good enough solution. We recommend users to use a server program together with the official ",(0,a.kt)("a",{parentName:"p",href:"https://trac.ffmpeg.org/wiki/StreamingGuide",title:"FFMpeg used for streaming"},"FFMpeg",(0,a.kt)(s.Z,{mdxType:"IconExternalLink"}))," streaming features."))),(0,a.kt)("h3",{id:"commercial-plan"},"Commercial plan"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Question"),": Will there be a commercial plan for ",(0,a.kt)("inlineCode",{parentName:"p"},"mpegCoder"),"?")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Answer"),": No. ",(0,a.kt)("inlineCode",{parentName:"p"},"mpegCoder")," shares exactly the same license (GPL v3) of FFMpeg. This project is totally open-sourced. Although GPLv3 enables coders to add a commercial plan, such a plan would be a burden for me. I will not concern anything about the commercial plan for this project, even sponsorship."))))}f.isMDXComponent=!0},3751:function(e,t){t.Z={body:'<path fill="currentColor" d="M19.07 13.88L13 19.94V22h2.06l6.06-6.07m1.58-2.35l-1.28-1.28a.517.517 0 0 0-.38-.17c-.15.01-.29.06-.39.17l-1 1l2.05 2l1-1c.19-.2.19-.52 0-.72M11 18H4V8l8 5l8-5v2h2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v-2m9-12l-8 5l-8-5h16Z"/>',width:24,height:24}},3119:function(e,t){t.Z={body:'<path fill="currentColor" d="M11.28 6.78a.75.75 0 0 0-1.06-1.06L7.25 8.69L5.78 7.22a.75.75 0 0 0-1.06 1.06l2 2a.75.75 0 0 0 1.06 0l3.5-3.5z"/><path fill="currentColor" fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-1.5 0a6.5 6.5 0 1 1-13 0a6.5 6.5 0 0 1 13 0z"/>'}}}]);